@startuml
scale 600 width
skinparam backgroundColor #FFEBDC
scale 1
skinparam backgroundColor LightYellow
skinparam state {
  BackgroundColor<<O-File>> Olive
}

[*] --> MAIN_COMPILE : BEGIN
[*] -left-> LIBRARY_COMPILE : BEGIN

state MAIN_COMPILE {
  state "-I./lib/header.hxx" as header_hxx_main
  header_hxx_main : main.cxx
  state "main.cxx.o" as main_cxx_o <<O-File>>
  main_cxx_o : "OUTPUT File"
  state "main.cxx.o.d" as main_cxx_o_d <<O-File>>
  main_cxx_o_d : "OUTPUT File"

  [*] -right-> header_hxx_main : 1/4
  header_hxx_main -> main_cxx_o : compile 'main.cxx'
  header_hxx_main -> main_cxx_o_d : compile 'main.cxx'
  main_cxx_o_d -> main_cxx_o : "INPUT FILE"
}

state LIBRARY_COMPILE {
  state "-I./lib/header.hxx" as header_hxx_lib
  header_hxx_lib : header.cxx
  state "header.cxx.o" as header_cxx_o <<O-File>>
  header_cxx_o : "OUTPUT File"
  state "header.cxx.o.d" as header_cxx_o_d <<O-File>>
  header_cxx_o_d : "OUTPUT File"

  [*] -right-> header_hxx_lib : 2/4
  header_hxx_lib --> header_cxx_o : compile 'header.cxx'
  header_hxx_lib --> header_cxx_o_d : compile 'header.cxx'
  header_cxx_o_d -> header_cxx_o : "INPUT FILE"
}

state LIBRARY_PACKAGE {
  state "./bin/header.hxx.o" as header_hxx_pkg
  header_hxx_pkg : header.hxx.o
  state "**liblib_113.a**" as liblib_113_a <<O-File>>
  liblib_113_a : "OUTPUT File"

  [*] -right-> header_hxx_pkg : 3/4
  header_hxx_pkg -right-> liblib_113_a : package 'header.cxx.o'
}
header_cxx_o --> header_hxx_pkg

state MAIN_LINK {
  state "./src/main.cxx" as main_cxx_link
  main_cxx_link : main.cxx
  state "**main_113**" as main_113 <<O-File>>
  main_113 : "OUTPUT File"

  [*] -right-> main_cxx_link : 4/4
  main_cxx_o --> main_cxx_link : 4/4
  liblib_113_a --> main_cxx_link : 4/4
  main_cxx_link -> main_113 : link 'main.cxx'
}

note bottom of liblib_113_a
This is a Library
end note

note right of main_113
This is a Executable
end note

title
    How to Build the State of Project "basic_113"?
end title

header
<font color=red>Tips: version 1.0</font>
endheader

center footer Develop C/C++ Application with the 'CMake'

@enduml